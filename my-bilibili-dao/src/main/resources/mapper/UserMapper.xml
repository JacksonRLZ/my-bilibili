<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bilibili.mapper.UserMapper">
    <sql id="base_field">
        id,phone,email,password,salt,createTime,updateTime
    </sql>

    <sql id="insert_field">
        phone,email,password,salt,createTime
    </sql>

    <sql id="insert_value">
        #{phone},
        #{email},
        #{password},
        #{salt},
        #{createTime}
    </sql>

    <insert id="addUser" parameterType="com.bilibili.domain.User" useGeneratedKeys="true" keyProperty="id">
        insert into t_user
            (phone, email, password, salt, createTime)
        values (#{phone},
                #{email},
                #{password},
                #{salt},
                #{createTime})
    </insert>

    <insert id="addUserInfo" parameterType="com.bilibili.domain.UserInfo">
        insert into t_user_info
            (userId, nick, avatar, sign, gender, birth, createTime)
        values (#{userId}, #{nick}, #{avatar}, #{sign}, #{gender}, #{birth}, #{createTime})
    </insert>

    <select id="getUserByPhoneOrEmail" resultType="com.bilibili.domain.User" parameterType="string">
        select
        <include refid="base_field"/>
        from t_user
        where
        <trim suffixOverrides=",">
            <if test="phone != null and phone != '' ">
                phone = #{phone},
            </if>
            <if test="email != null and email != '' ">
                email = #{email},
            </if>
        </trim>
    </select>

    <select id="getUserById" resultType="com.bilibili.domain.User" parameterType="java.lang.Long">
        select
        <include refid="base_field"/>
        from t_user
        where id = #{id}
    </select>

    <select id="getUserInfoById" resultType="com.bilibili.domain.UserInfo" parameterType="java.lang.Long">
        select *
        from t_user_info
        where userId = #{id}
    </select>

    <select id="getUserInfoByIds" resultType="com.bilibili.domain.UserInfo">
        select *
        from t_user_info
        where 1 = 1
        <if test="followingIdSet != null and followingIdSet.size > 0">
            and userId in
            <foreach collection="followingIdSet" item="userId" index="index" open="(" close=")" separator=",">
                #{userId}
            </foreach>
        </if>
    </select>
    <select id="pageCountUserInfo" resultType="java.lang.Integer" parameterType="map">
        select count(1)
        from t_user_info
        where 1 = 1
        <if test="nick != null and nick != ''">
            and nick like CONCAT('%',#{nick},'%')
        </if>
    </select>
    <select id="pageListUserInfos" resultType="com.bilibili.domain.UserInfo" parameterType="map">
        select *
        from t_user_info
        where 1 = 1
        <if test="nick != null and nick != ''">
            and nick like '%${nick}%'
        </if>
        order by id desc
        limit #{start},#{limit}
    </select>

    <update id="updateUsers" parameterType="com.bilibili.domain.User">
        update t_user
        set
        <if test="phone != null and phone != '' ">
            phone = #{phone},
        </if>
        <if test="email != null and email != '' ">
            email = #{email},
        </if>
        <if test="password != null and password != '' ">
            password = #{password},
        </if>
        updateTime = #{updateTime}
        where
        id = #{id}
    </update>

    <update id="updateUserInfos">
        update
        t_user_info
        set
        <if test="nick != null and nick != '' ">
            nick = #{nick},
        </if>
        <if test="avatar != null">
            avatar = #{avatar},
        </if>
        <if test="sign != null">
            sign = #{sign},
        </if>
        <if test="birth != null and birth != '' ">
            birth = #{birth},
        </if>
        <if test="gender != null and gender != '' ">
            gender = #{gender},
        </if>
        updateTime = #{updateTime}
        where
        userId = #{userId}
    </update>
</mapper>
